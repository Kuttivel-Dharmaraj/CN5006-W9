{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drkgs\\\\Music\\\\CN5006 W9\\\\react-class-components\\\\src\\\\ToggleModeComponent.js\";\nimport './App.css';\nimport React from 'react';\nimport sad from './sad.png';\nimport happy from './happy.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ToggleMode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pic: happy\n    };\n    this.Toggle_Mode = this.Toggle_Mode.bind(this);\n  }\n  Toggle_Mode() {\n    this.setState(prevState => {\n      if (prevState.pic === sad) {\n        this.mode = \"happy\";\n        return {\n          pic: happy\n        };\n      } else if (prevState.pic === happy) {\n        this.mode = \"sad\";\n        return {\n          pic: sad\n        };\n      }\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"This is output of Task2: \", this.mode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.Toggle_Mode,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.pic,\n          alt: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ToggleMode;","map":{"version":3,"names":["React","sad","happy","jsxDEV","_jsxDEV","ToggleMode","Component","constructor","props","state","pic","Toggle_Mode","bind","setState","prevState","mode","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt"],"sources":["C:/Users/drkgs/Music/CN5006 W9/react-class-components/src/ToggleModeComponent.js"],"sourcesContent":["import './App.css';\r\nimport React from 'react';\r\n\r\nimport sad from './sad.png';\r\nimport happy from './happy.png';\r\n\r\nclass ToggleMode extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pic: happy };\r\n        this.Toggle_Mode = this.Toggle_Mode.bind(this);\r\n    }\r\n\r\n    Toggle_Mode() {\r\n        this.setState((prevState) => {\r\n            if (prevState.pic === sad) {\r\n                this.mode = \"happy\";\r\n                return { pic: happy };\r\n            } else if (prevState.pic === happy) {\r\n                this.mode = \"sad\";\r\n                return { pic: sad };\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>This is output of Task2: {this.mode}</h3>\r\n                <button onClick={this.Toggle_Mode}>\r\n                    <img src={this.state.pic} alt=\" \" />\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleMode;\r\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,UAAU,SAASL,KAAK,CAACM,SAAS,CAAC;EACrCC,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAEC,GAAG,EAAER;IAAM,CAAC;IAC3B,IAAI,CAACS,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,WAAWA,CAAA,EAAG;IACV,IAAI,CAACE,QAAQ,CAAEC,SAAS,IAAK;MACzB,IAAIA,SAAS,CAACJ,GAAG,KAAKT,GAAG,EAAE;QACvB,IAAI,CAACc,IAAI,GAAG,OAAO;QACnB,OAAO;UAAEL,GAAG,EAAER;QAAM,CAAC;MACzB,CAAC,MAAM,IAAIY,SAAS,CAACJ,GAAG,KAAKR,KAAK,EAAE;QAChC,IAAI,CAACa,IAAI,GAAG,KAAK;QACjB,OAAO;UAAEL,GAAG,EAAET;QAAI,CAAC;MACvB;IACJ,CAAC,CAAC;EACN;EAEAe,MAAMA,CAAA,EAAG;IACL,oBACIZ,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,GAAI,2BAAyB,EAAC,IAAI,CAACF,IAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CjB,OAAA;QAAQkB,OAAO,EAAE,IAAI,CAACX,WAAY;QAAAM,QAAA,eAC9Bb,OAAA;UAAKmB,GAAG,EAAE,IAAI,CAACd,KAAK,CAACC,GAAI;UAACc,GAAG,EAAC;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;AACJ;AAEA,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}